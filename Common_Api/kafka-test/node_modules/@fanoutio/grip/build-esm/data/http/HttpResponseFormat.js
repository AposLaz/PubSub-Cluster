var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import Response from '../Response';
// The HttpResponseFormat class is the format used to publish messages to
// HTTP response clients connected to a GRIP proxy.
var HttpResponseFormat = /** @class */ (function (_super) {
    __extends(HttpResponseFormat, _super);
    function HttpResponseFormat() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // The name used when publishing this format.
    HttpResponseFormat.prototype.name = function () {
        return 'http-response';
    };
    return HttpResponseFormat;
}(Response));
export default HttpResponseFormat;
//# sourceMappingURL=HttpResponseFormat.js.map