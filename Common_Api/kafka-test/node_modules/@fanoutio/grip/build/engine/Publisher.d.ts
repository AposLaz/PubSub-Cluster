import IFormat from '../data/IFormat';
import HttpStreamFormat from '../data/http/HttpStreamFormat';
import HttpResponseFormat from '../data/http/HttpResponseFormat';
import IGripConfig from './IGripConfig';
import PublisherClient from './PublisherClient';
import IItem from '../data/IItem';
export default class Publisher {
    clients: PublisherClient[];
    constructor(config?: string | IGripConfig | IGripConfig[]);
    applyConfig(config: string | IGripConfig | IGripConfig[]): void;
    addClient(client: PublisherClient): void;
    publish(channel: string, item: IItem): Promise<void>;
    publishFormats(channel: string, formats: IFormat | IFormat[], id?: string, prevId?: string): Promise<void>;
    publishHttpResponse(channel: string, data: HttpResponseFormat | string, id?: string, prevId?: string): Promise<void>;
    publishHttpStream(channel: string, data: HttpStreamFormat | string, id?: string, prevId?: string): Promise<void>;
}
